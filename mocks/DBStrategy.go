// Code generated by mockery v2.53.4. DO NOT EDIT.

package mocks

import mock "github.com/stretchr/testify/mock"

// DBStrategy is an autogenerated mock type for the DBStrategy type
type DBStrategy struct {
	mock.Mock
}

// DSN provides a mock function with no fields
func (_m *DBStrategy) DSN() string {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for DSN")
	}

	var r0 string
	if rf, ok := ret.Get(0).(func() string); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(string)
	}

	return r0
}

// DriverName provides a mock function with no fields
func (_m *DBStrategy) DriverName() string {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for DriverName")
	}

	var r0 string
	if rf, ok := ret.Get(0).(func() string); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(string)
	}

	return r0
}

// NewDBStrategy creates a new instance of DBStrategy. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewDBStrategy(t interface {
	mock.TestingT
	Cleanup(func())
}) *DBStrategy {
	mock := &DBStrategy{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
